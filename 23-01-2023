1.First Unique Character in a String
code:
class Solution {
    public int firstUniqChar(String s) {
        Map<Character,Integer> map = new HashMap<>();
        int x= s.length();
        for(int i=0;i<x;i++){
            if(map.containsKey(s.charAt(i))){
                map.put(s.charAt(i),map.get(s.charAt(i))+1);
            }
            else{
                map.put(s.charAt(i),1);
            }
        }
        for (int i=0; i<x;i++){
            if(map.get(s.charAt(i))==1){
                return i;
            }
        }
        return -1;
    }
}

2.Longest Substring Without Repeating Characters
code:
class Solution {
    public int lengthOfLongestSubstring(String s) {
        int low=0,high=0,len=0;
        Map<Character,Integer> map = new HashMap<>();
        while(high<s.length()){
            if(map.containsKey(s.charAt(high))){
                map.remove(s.charAt(low));
                low++;
            }
            else{
                map.put(s.charAt(high),1);
                len=Math.max(len,high-low+1);
                high++;
            }
        }
        return len;
    }
}
